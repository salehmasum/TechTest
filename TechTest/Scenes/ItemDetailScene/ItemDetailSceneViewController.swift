//
//  ItemDetailSceneViewController.swift
//  TechTest
//
//  Created by user on 18/6/18.
//  Copyright (c) 2018 SM. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ItemDetailSceneDisplayLogic: class
{
  func displayItemDetail(viewModel: ItemDetailScene.ItemDetail.ViewModel)
}

class ItemDetailSceneViewController: UIViewController, ItemDetailSceneDisplayLogic
{
  var interactor: ItemDetailSceneBusinessLogic?
  var router: (NSObjectProtocol & ItemDetailSceneRoutingLogic & ItemDetailSceneDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = ItemDetailSceneInteractor()
    let presenter = ItemDetailScenePresenter()
    let router = ItemDetailSceneRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    getItemDetail()
    
  }
  
  // MARK: Properties
  @IBOutlet weak var imageView: UIImageView!
  @IBOutlet weak var textView: UITextView!
  @IBOutlet weak var stackView: UIStackView!
  
  
  func getItemDetail()
  {
    interactor?.getItemDetail()
  }
  
  func displayItemDetail(viewModel: ItemDetailScene.ItemDetail.ViewModel)
  {
    print(viewModel.selectedItem)
    populateView(item: viewModel.selectedItem)
  }
  
  func populateView(item: Item)
  {
    if let title = item.title
    {
      self.navigationItem.title = title
    }
    if let description = item.description
    {
      self.textView.text = description
    }
    if let urlString = item.imageHref
    {
      let url = URL(string: urlString)
      imageView.kf.setImage(with: url)
    }
  }
  
  
}
