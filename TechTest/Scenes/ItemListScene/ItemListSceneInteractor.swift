//
//  ItemListSceneInteractor.swift
//  TechTest
//
//  Created by user on 18/6/18.
//  Copyright (c) 2018 SM. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ItemListSceneBusinessLogic
{
  func loadItemList(request: ItemListScene.ItemList.Request)
}

protocol ItemListSceneDataStore
{
  var responseModel: ItemCollection? { get }
}

class ItemListSceneInteractor: ItemListSceneBusinessLogic, ItemListSceneDataStore
{
  var presenter: ItemListScenePresentationLogic?
  
  //MARK: We are injecting ItemService as a Dependency to ItemSceneWorker to achieve decouple design
  var itemListWorker = ItemListSceneWorker(loadItemListService: ItemService())
  
  var responseModel: ItemCollection?
  
  func loadItemList(request: ItemListScene.ItemList.Request)
  {
    itemListWorker.initiateLoadingItemCollection(withCredentials: request) { (responseModel, error) in
      if let responseModel = responseModel {
        let itemListResponseModel = ItemListScene.ItemList.Response(responseModel: responseModel)
        self.presenter?.presentItemCollectionResponseModel(response: itemListResponseModel)
        self.responseModel = responseModel
      }else {
        self.presenter?.presentError(error: error!)
      }
    }
  }
  
}
