//
//  ItemListSceneRouter.swift
//  TechTest
//
//  Created by user on 18/6/18.
//  Copyright (c) 2018 SM. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol ItemListSceneRoutingLogic
{
  func routeToItemDetail(segue: UIStoryboardSegue?)
}

protocol ItemListSceneDataPassing
{
  var dataStore: ItemListSceneDataStore? { get }
}

class ItemListSceneRouter: NSObject, ItemListSceneRoutingLogic, ItemListSceneDataPassing
{
  weak var viewController: ItemListSceneViewController?
  var dataStore: ItemListSceneDataStore?
  
  // MARK: Routing
  
  func routeToItemDetail(segue: UIStoryboardSegue?)
  {
    if let _ = segue {
    //  let destinationVC = segue.destination as! SomewhereViewController
    //  var destinationDS = destinationVC.router!.dataStore!
     // passDataToSomewhere(source: dataStore!, destination: &destinationDS)
    } else {
      let storyboard = UIStoryboard(name: "Main", bundle: nil)
      let destinationVC = storyboard.instantiateViewController(withIdentifier: "ItemDetailSceneViewController") as! ItemDetailSceneViewController
      var destinationDS = destinationVC.router!.dataStore!
      passDataToSomewhere(source: dataStore!, destination: &destinationDS)
      navigateToSomewhere(source: viewController!, destination: destinationVC)
    }
  }

  // MARK: Navigation
  
  func navigateToSomewhere(source: ItemListSceneViewController, destination: ItemDetailSceneViewController)
  {
    source.show(destination, sender: nil)
  }
  
   //MARK: Passing data
  
  func passDataToSomewhere(source: ItemListSceneDataStore, destination: inout ItemDetailSceneDataStore)
  {
    let sourceViewModel = viewController?.viewModel
    guard let indexPaths = viewController!.collectionView!.indexPathsForSelectedItems else { return }
    let indexPath : NSIndexPath = indexPaths[0] as NSIndexPath
    let selectedItem = sourceViewModel?.itemArray[indexPath.item]
    destination.selectedItem = selectedItem
    
  }
}
